[{"path":"https://elliottmess.github.io/koboAPI/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Elliott Messeiller. Author, maintainer.","code":""},{"path":"https://elliottmess.github.io/koboAPI/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Messeiller E (2022). koboAPI: Access kobo API via R. R package version 1.0.1, https://elliottmess.github.io/koboAPI/.","code":"@Manual{,   title = {koboAPI: Access kobo API via R},   author = {Elliott Messeiller},   year = {2022},   note = {R package version 1.0.1},   url = {https://elliottmess.github.io/koboAPI/}, }"},{"path":"https://elliottmess.github.io/koboAPI/index.html","id":"koboapi","dir":"","previous_headings":"","what":"Access kobo API via R","title":"Access kobo API via R","text":"koboAPI package access interact KoboToolbox-based APIs via R. package technically supports API based KoboToolbox. however made simpler KoboToolbox humanitarianresponse.info servers. KoboAPI provides simple functions retrieve forms data set KoboToolbox. documentation kobo APIs incomplete. community-based examples access interact API can found .","code":""},{"path":"https://elliottmess.github.io/koboAPI/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Access kobo API via R","text":"","code":"devtools::install_github(\"ElliottMess/koboAPI\")"},{"path":"https://elliottmess.github.io/koboAPI/index.html","id":"authentication","dir":"","previous_headings":"","what":"Authentication","title":"Access kobo API via R","text":"Two type authentication available: client: client authentication providing valid auth_key whick follows format ‘{user}:{password}’ token: authentication token. See get token Eventually, authentication result retrieving token.","code":""},{"path":"https://elliottmess.github.io/koboAPI/index.html","id":"setting-your-token-in-your-environement","dir":"","previous_headings":"Authentication","what":"Setting your token in your environement","title":"Access kobo API via R","text":"easiest way use package set API token R environment: Get API token: see . Run usethis::edit_r_environ() KOBOTOOLBOX_TOKEN = “yourtoken ” HUMANITARIAN_RESPONSE_TOKEN = “yourtoken ” Make sure '.Renviron' ends new line, save , restart R","code":""},{"path":"https://elliottmess.github.io/koboAPI/index.html","id":"kobo_api","dir":"","previous_headings":"","what":"kobo_api","title":"Access kobo API via R","text":"core function package kobo_api. makes call API return response helpful object. instance, want retrieve assets linked access token, can use: valid GET call API can passed kobo_api().","code":"kobo_api(path = \"/assets\", auth_type = \"token\", auth_key = \"HERE_A_TOKEN\", api = \"kobotoolbox\")"},{"path":"https://elliottmess.github.io/koboAPI/index.html","id":"get-functions","dir":"","previous_headings":"","what":"get functions","title":"Access kobo API via R","text":"convenience wrappers around kobo_api provided convienence. return objects close can found downloaded kobotoolbox-based web interfaces. based passing valid asset_id. Assets IDs available can found get_asset_id_list named list IDs get_asset_id_df dataframe bit information. get_form: retrieves form asset_id. output list three dataframes three sheets XLSform. get_data: retrieves data asset_id responses.","code":""},{"path":"https://elliottmess.github.io/koboAPI/index.html","id":"roadmap","dir":"","previous_headings":"","what":"Roadmap","title":"Access kobo API via R","text":"package provides basic functions, lot done: Support exports Support POST functions Coverage API functions","code":""},{"path":"https://elliottmess.github.io/koboAPI/reference/assert_api.html","id":null,"dir":"Reference","previous_headings":"","what":"Assert that the api is valid — assert_api","title":"Assert that the api is valid — assert_api","text":"Assert api valid","code":""},{"path":"https://elliottmess.github.io/koboAPI/reference/assert_api.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assert that the api is valid — assert_api","text":"","code":"assert_api(api)"},{"path":"https://elliottmess.github.io/koboAPI/reference/assert_api.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assert that the api is valid — assert_api","text":"api (character) api check","code":""},{"path":"https://elliottmess.github.io/koboAPI/reference/assert_strings.html","id":null,"dir":"Reference","previous_headings":"","what":"Assert that arguments passed in are length 1 character vectors — assert_strings","title":"Assert that arguments passed in are length 1 character vectors — assert_strings","text":"Assert arguments passed length 1 character vectors","code":""},{"path":"https://elliottmess.github.io/koboAPI/reference/assert_strings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assert that arguments passed in are length 1 character vectors — assert_strings","text":"","code":"assert_strings(...)"},{"path":"https://elliottmess.github.io/koboAPI/reference/assert_strings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assert that arguments passed in are length 1 character vectors — assert_strings","text":"... Character vectors check","code":""},{"path":"https://elliottmess.github.io/koboAPI/reference/authenticate_api.html","id":null,"dir":"Reference","previous_headings":"","what":"Authentication for kobo API — authenticate_api","title":"Authentication for kobo API — authenticate_api","text":"Retrieves token provided `auth_token`, add `Authorization` header via add_headers API call.","code":""},{"path":"https://elliottmess.github.io/koboAPI/reference/authenticate_api.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Authentication for kobo API — authenticate_api","text":"","code":"authenticate_api(auth_type, auth_key = NULL, api)"},{"path":"https://elliottmess.github.io/koboAPI/reference/authenticate_api.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Authentication for kobo API — authenticate_api","text":"auth_type (character) Two types authentication possible: - `client`: use `auth_key` `user:password` authenticate kobo API - `token`: uses `token` provided `auth_key` authenticate auth_key (character) Can either : - combination kobo password format: `user:password` (e.g. 'my_user:my_password') - kobo API V2 token. See https://support.kobotoolbox.org/api.html api (character) type API used URL API can accessed. Can either: - `humanitarian_response`: \"https:://kobo.humanitarianresponse.info\" used base URL (default) - `kobotoolbox`: \"https:://https://kf.kobotoolbox.org\" used base URL - `custom`: custom URL. Must least start \"https://\"","code":""},{"path":"https://elliottmess.github.io/koboAPI/reference/authenticate_api.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Authentication for kobo API — authenticate_api","text":"`Authorization` header call via add_headers","code":""},{"path":"https://elliottmess.github.io/koboAPI/reference/authenticate_api.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Authentication for kobo API — authenticate_api","text":"authentication based token.","code":""},{"path":"https://elliottmess.github.io/koboAPI/reference/get_api_url.html","id":null,"dir":"Reference","previous_headings":"","what":"Get URL of api — get_api_url","title":"Get URL of api — get_api_url","text":"Get URL api","code":""},{"path":"https://elliottmess.github.io/koboAPI/reference/get_api_url.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get URL of api — get_api_url","text":"","code":"get_api_url(api)"},{"path":"https://elliottmess.github.io/koboAPI/reference/get_api_url.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get URL of api — get_api_url","text":"api (character) type API used URL API can accessed. Can either: - `humanitarian_response`: \"https:://kobo.humanitarianresponse.info\" used base URL (default) - `kobotoolbox`: \"https:://https://kf.kobotoolbox.org\" used base URL - `custom`: custom URL. Must least start \"https://\"","code":""},{"path":"https://elliottmess.github.io/koboAPI/reference/get_api_url.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get URL of api — get_api_url","text":"character vector URL api","code":""},{"path":"https://elliottmess.github.io/koboAPI/reference/get_asset_id_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a data frame with of assets information for the authenticated account. — get_asset_id_df","title":"Get a data frame with of assets information for the authenticated account. — get_asset_id_df","text":"function provides high-level access APIs based kobotoolbox. parses base URL ´api´ returns JSON response standard format.","code":""},{"path":"https://elliottmess.github.io/koboAPI/reference/get_asset_id_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a data frame with of assets information for the authenticated account. — get_asset_id_df","text":"","code":"get_asset_id_df(   api = c(\"humanitarian_response\", \"kobotoolbox\"),   auth_type = c(\"client\", \"token\"),   auth_key = NULL )"},{"path":"https://elliottmess.github.io/koboAPI/reference/get_asset_id_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a data frame with of assets information for the authenticated account. — get_asset_id_df","text":"api (character) type API used URL API can accessed. Can either: - `humanitarian_response`: \"https:://kobo.humanitarianresponse.info\" used base URL (default) - `kobotoolbox`: \"https:://https://kf.kobotoolbox.org\" used base URL - `custom`: custom URL. Must least start \"https://\" auth_type (character) Two types authentication possible: - `client`: use `auth_key` `user:password` authenticate kobo API - `token`: uses `token` provided `auth_key` authenticate auth_key (character) Can either : - combination kobo password format: `user:password` (e.g. 'my_user:my_password') - kobo API V2 token. See https://support.kobotoolbox.org/api.html","code":""},{"path":"https://elliottmess.github.io/koboAPI/reference/get_asset_id_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a data frame with of assets information for the authenticated account. — get_asset_id_df","text":"data frame asset IDs, names, type, deployment status.","code":""},{"path":"https://elliottmess.github.io/koboAPI/reference/get_asset_id_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a list of asset IDs for the authenticated account. — get_asset_id_list","title":"Get a list of asset IDs for the authenticated account. — get_asset_id_list","text":"function provides high-level access APIs based kobotoolbox. parses base URL ´api´ returns JSON response standard format.","code":""},{"path":"https://elliottmess.github.io/koboAPI/reference/get_asset_id_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a list of asset IDs for the authenticated account. — get_asset_id_list","text":"","code":"get_asset_id_list(   api = c(\"humanitarian_response\", \"kobotoolbox\"),   auth_type = c(\"client\", \"token\"),   auth_key = NULL )"},{"path":"https://elliottmess.github.io/koboAPI/reference/get_asset_id_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a list of asset IDs for the authenticated account. — get_asset_id_list","text":"api (character) type API used URL API can accessed. Can either: - `humanitarian_response`: \"https:://kobo.humanitarianresponse.info\" used base URL (default) - `kobotoolbox`: \"https:://https://kf.kobotoolbox.org\" used base URL - `custom`: custom URL. Must least start \"https://\" auth_type (character) Two types authentication possible: - `client`: use `auth_key` `user:password` authenticate kobo API - `token`: uses `token` provided `auth_key` authenticate auth_key (character) Can either : - combination kobo password format: `user:password` (e.g. 'my_user:my_password') - kobo API V2 token. See https://support.kobotoolbox.org/api.html","code":""},{"path":"https://elliottmess.github.io/koboAPI/reference/get_asset_id_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a list of asset IDs for the authenticated account. — get_asset_id_list","text":"named list asset IDs","code":""},{"path":"https://elliottmess.github.io/koboAPI/reference/get_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Download data of an asset — get_data","title":"Download data of an asset — get_data","text":"Download responses API specific asset","code":""},{"path":"https://elliottmess.github.io/koboAPI/reference/get_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download data of an asset — get_data","text":"","code":"get_data(   asset_id,   api = api,   auth_type = c(\"client\", \"token\"),   auth_key = NULL )"},{"path":"https://elliottmess.github.io/koboAPI/reference/get_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download data of an asset — get_data","text":"asset_id (character) ID form accessed (character string). Must KPI-type ID (api V1 ID). See download_forms_all details. api (character) type API used URL API can accessed. Can either: - `humanitarian_response`: \"https:://kobo.humanitarianresponse.info\" used base URL (default) - `kobotoolbox`: \"https:://https://kf.kobotoolbox.org\" used base URL - `custom`: custom URL. Must least start \"https://\" auth_type (character) Two types authentication possible: - `client`: use `auth_key` `user:password` authenticate kobo API - `token`: uses `token` provided `auth_key` authenticate auth_key (character) Can either : - combination kobo password format: `user:password` (e.g. 'my_user:my_password') - kobo API V2 token. See https://support.kobotoolbox.org/api.html","code":""},{"path":"https://elliottmess.github.io/koboAPI/reference/get_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download data of an asset — get_data","text":"data frame responses data ´asset_id´","code":""},{"path":"https://elliottmess.github.io/koboAPI/reference/get_form.html","id":null,"dir":"Reference","previous_headings":"","what":"Download form for a specific asset ID — get_form","title":"Download form for a specific asset ID — get_form","text":"Download form specific asset ID","code":""},{"path":"https://elliottmess.github.io/koboAPI/reference/get_form.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download form for a specific asset ID — get_form","text":"","code":"get_form(   asset_id,   api = c(\"humanitarian_response\", \"kobotoolbox\"),   auth_type = c(\"client\", \"token\"),   auth_key = NULL )"},{"path":"https://elliottmess.github.io/koboAPI/reference/get_form.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download form for a specific asset ID — get_form","text":"asset_id (character) ID form accessed (character string). Must KPI-type ID (api V1 ID). See download_forms_all details. api (character) type API used URL API can accessed. Can either: - `humanitarian_response`: \"https:://kobo.humanitarianresponse.info\" used base URL (default) - `kobotoolbox`: \"https:://https://kf.kobotoolbox.org\" used base URL - `custom`: custom URL. Must least start \"https://\" auth_type (character) Two types authentication possible: - `client`: use `auth_key` `user:password` authenticate kobo API - `token`: uses `token` provided `auth_key` authenticate auth_key (character) Can either : - combination kobo password format: `user:password` (e.g. 'my_user:my_password') - kobo API V2 token. See https://support.kobotoolbox.org/api.html","code":""},{"path":"https://elliottmess.github.io/koboAPI/reference/get_form.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download form for a specific asset ID — get_form","text":"list three data frames correspond structure XLSform:    - \"survey\": data frame questions variables.    - \"choices\" data frame choices variables.    - \"settings\" data frame basic settings form.","code":""},{"path":"https://elliottmess.github.io/koboAPI/reference/kobo_api.html","id":null,"dir":"Reference","previous_headings":"","what":"Access to kobo-style APIs — kobo_api","title":"Access to kobo-style APIs — kobo_api","text":"function provides high-level access APIs based kobotoolbox. parses base URL ´api´ returns JSON response standard format.","code":""},{"path":"https://elliottmess.github.io/koboAPI/reference/kobo_api.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Access to kobo-style APIs — kobo_api","text":"","code":"kobo_api(   path,   api = c(\"humanitarian_response\", \"kobotoolbox\"),   auth_type = c(\"client\", \"token\"),   auth_key = NULL )"},{"path":"https://elliottmess.github.io/koboAPI/reference/kobo_api.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Access to kobo-style APIs — kobo_api","text":"path (character) additional path based base API URL. start `/`. api (character) type API used URL API can accessed. Can either: - `humanitarian_response`: \"https:://kobo.humanitarianresponse.info\" used base URL (default) - `kobotoolbox`: \"https:://https://kf.kobotoolbox.org\" used base URL - `custom`: custom URL. Must least start \"https://\" auth_type (character) Two types authentication possible: - `client`: use `auth_key` `user:password` authenticate kobo API - `token`: uses `token` provided `auth_key` authenticate auth_key (character) Can either : - combination kobo password format: `user:password` (e.g. 'my_user:my_password') - kobo API V2 token. See https://support.kobotoolbox.org/api.html","code":""},{"path":"https://elliottmess.github.io/koboAPI/reference/kobo_api.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Access to kobo-style APIs — kobo_api","text":"`kobo_api` object consisting list :     - `content`: parsed content request     - `path`:     - `response`: JSON response request","code":""},{"path":"https://elliottmess.github.io/koboAPI/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://elliottmess.github.io/koboAPI/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://elliottmess.github.io/koboAPI/news/index.html","id":"koboapi-101","dir":"Changelog","previous_headings":"","what":"koboAPI 1.0.1","title":"koboAPI 1.0.1","text":"Revamp whole package implement best practices package development Rename functions. Retrieve token environment NULL Removes form wrangling functions. Added NEWS.md file track changes package.","code":""}]
